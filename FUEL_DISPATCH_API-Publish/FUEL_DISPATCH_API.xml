<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FUEL_DISPATCH_API</name>
    </assembly>
    <members>
        <member name="M:FUEL_DISPATCH_API.Controllers.ArticlesController.PostArticle(FUEL_DISPATCH_API.DataAccess.Models.ArticleDataMaster)">
            <summary>
            Crear un nuevo articulo en un almacen. 
            </summary>
            <remarks>
            Sample request: 
            
                POST /Articles
                {
                    "articleNumber": "IT-001",
                    "description": "Alguna descripcion del articulo. ",
                    "unitPrice": 100,
                    "manufacturer": "Shell",
                    "barCode": "00010001",
                    "companyId": 1
                }
            </remarks>
            <param name="article"></param>
            <response code="201">Si se crea el articulo correctamente. </response>
            <response code="400">Si se intenta agregar un articulo con el codigo de una ya existente. </response>
            <response code="400">Si se envia el numero de articulo nulo. </response>
            <returns></returns>
        </member>
        <member name="M:FUEL_DISPATCH_API.Controllers.CompanyController.GetCompanyBranchOfficess(System.Int32)">
            <summary>
            Obtener todas las sucursales de una compa単ia. 
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:FUEL_DISPATCH_API.Controllers.EmployeeConsumptionLimitsController.SetEmployeLimitAndMethod(FUEL_DISPATCH_API.DataAccess.Models.EmployeeConsumptionLimits)">
            <summary>
            Este controlador se utiliza para asignar el metodo que 
            tendran los conductores para el consumo de combustible 
            se le asigna limite y la cantidad actual. 
            </summary>
            <remarks>
            {
              "driverId": 1,
              "methodOfComsuptionId": 1,
              "limitAmount": 5000,
              "currentAmount": 5000
            }
            </remarks>
            <param name="employeeConsumption"></param>
            <returns></returns>
        </member>
        <member name="M:FUEL_DISPATCH_API.Controllers.UsersCompaniesController.UpdateUserCompany(System.Int32,System.Int32,FUEL_DISPATCH_API.DataAccess.Models.UsersCompanies)">
            <summary>
            Actualizar relaciones Usuario-Compa単ia.
            </summary>
            <remarks>
            Sample request:
                
                PUT /UsersCompanies
                {
                    "userId": 1,
                    "companyId": 2
                }
            </remarks>
            <param name="userId">Id del usuario. </param>
            <param name="companyId">Id de la compa単ia. </param>
            <param name="usersCompany">El cuerpo de la relacion. </param>
            <response code="200">Si se actualiza la entidad correctamente. </response>
            <response code="400">Si falla una validacion. </response>
            <response code="404">Si no se encuentra la endidad con los Id que se proveen. </response>
            <returns></returns>
        </member>
        <member name="M:FUEL_DISPATCH_API.Controllers.UsersCompaniesController.SetUsersCompany(FUEL_DISPATCH_API.DataAccess.Models.UsersCompanies)">
            <summary>
            Agregar una nueva relacion Usuario-Compa単ia. 
            </summary>
            <remarks>
            Sample request:
            
                POST /UsersCompanies
                {
                    "userId": 1,
                    "companyId": 1
                }
            </remarks>
            <param name="usersCompany"></param>
            <response code="201">Si se actualiza la entidad correctamente. </response>
            <response code="400">Si falla una validacion. </response>
            <returns></returns>
        </member>
    </members>
</doc>
